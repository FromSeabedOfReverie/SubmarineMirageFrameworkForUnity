//---------------------------------------------------------------------------------------------------------
// ▽ Submarine Mirage Framework for Unity
//		Copyright (c) 2020 夢想海の水底より(from Seabed of Reverie)
//		Released under the MIT License :
//			https://github.com/FromSeabedOfReverie/SubmarineMirageFrameworkForUnity/blob/master/LICENSE
//---------------------------------------------------------------------------------------------------------
namespace SubmarineMirage.Utility {
	using System.Collections;
	using UnityEngine;
	using UniRx;
	using Cysharp.Threading.Tasks;
	using UTask;
	using Process;
	///====================================================================================================
	/// <summary>
	/// ■ クラス
	///----------------------------------------------------------------------------------------------------
	///		説明。
	/// </summary>
	///====================================================================================================
	public class Template : MonoBehaviourProcess {
		///------------------------------------------------------------------------------------------------
		/// ● 要素
		///------------------------------------------------------------------------------------------------
		/// <summary></summary>

		///------------------------------------------------------------------------------------------------
		/// <summary>
		/// ● コンストラクタ（疑似的）
		/// </summary>
		///------------------------------------------------------------------------------------------------
		protected override void Constructor() {
			base.Constructor();

			// ● 読込
			_loadEvent += async () => {
				await UTask.DontWait();
			};

			// ● 初期化
			_initializeEvent += async () => {
				await UTask.DontWait();
			};

			// ● 更新
			_updateEvent.Subscribe( _ => {
			} );
		}
		///------------------------------------------------------------------------------------------------
		/// <summary>
		/// ● 読込
		/// </summary>
		///------------------------------------------------------------------------------------------------
		public override async UniTask Load() {
			await base.Load();
		}
		///------------------------------------------------------------------------------------------------
		/// <summary>
		/// ● 初期化
		/// </summary>
		///------------------------------------------------------------------------------------------------
		public override async UniTask Initialize() {
			await base.Initialize();
		}
		///------------------------------------------------------------------------------------------------
		/// <summary>
		/// ● 更新
		/// </summary>
		///------------------------------------------------------------------------------------------------
		protected override void UpdateProcess() {
			base.UpdateProcess();
		}
	}
}